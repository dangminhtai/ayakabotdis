const fs = require('fs');
const path = require('path');
const axios = require('axios');
const { SlashCommandBuilder, EmbedBuilder, MessageFlags } = require('discord.js');

const historyPath = path.join(__dirname, '../data/ayaka-nsfw_history.json');
let history = {};

if (fs.existsSync(historyPath)) {
  history = JSON.parse(fs.readFileSync(historyPath, 'utf8'));
}

function saveHistory() {
  fs.writeFileSync(historyPath, JSON.stringify(history, null, 2));
}

module.exports = {
  data: new SlashCommandBuilder()
    .setName('ayaka-nsfw')
    .setDescription('Hi·ªÉn th·ªã ·∫£nh Kamisato Ayaka (NSFW)'),

  async execute(interaction) {
    if (!interaction.channel.nsfw) {
      return interaction.reply({
        content: '‚ö†Ô∏è D√πng l·ªánh n√†y trong k√™nh NSFW th√¥i nhen~',
        flags: MessageFlags.Ephemeral
      });
    }

    await interaction.deferReply(); // ‚úÖ Gi·ªØ interaction c√≤n s·ªëng

    const userId = interaction.user.id;
    const seenIds = history[userId] || [];

    try {
      const query = 'kamisato_ayaka';
      const MAX_PAGES = 20;
      const MAX_TRIES = 5;
      let chosen = null;

      for (let i = 0; i < MAX_TRIES; i++) {
        const randomPage = Math.floor(Math.random() * MAX_PAGES) + 1;
        const url = `https://yande.re/post.json?limit=100&page=${randomPage}&tags=${encodeURIComponent(query)}`;
        const res = await axios.get(url);
        const data = res.data;

        if (!Array.isArray(data) || data.length === 0) continue;

        const unseen = data.filter(post => !seenIds.includes(post.id));
        if (unseen.length > 0) {
          chosen = unseen[Math.floor(Math.random() * unseen.length)];
          history[userId] = [...seenIds, chosen.id];
          saveHistory();
          break;
        }
      }

      // Fallback n·∫øu kh√¥ng c√≥ ·∫£nh m·ªõi
      if (!chosen) {
        const fallbackUrl = `https://yande.re/post.json?limit=100&page=1&tags=${encodeURIComponent(query)}`;
        const res = await axios.get(fallbackUrl);
        const data = res.data;

        if (!Array.isArray(data) || data.length === 0) {
          return interaction.editReply('üòµ Kh√¥ng t√¨m th·∫•y ·∫£nh Ayaka n√†o.');
        }

        chosen = data[Math.floor(Math.random() * data.length)];
        await interaction.editReply('üëÄ B·∫°n ƒë√£ xem h·∫øt ·∫£nh m·ªõi r·ªìi~ ƒê√¢y l√† ·∫£nh c≈© n√®!');
      }

      // Debug ƒë·ªÉ ki·ªÉm tra
      console.log(`[DEBUG] ID: ${chosen.id}`);
      console.log(`[DEBUG] file_url: ${chosen.file_url}`);
      console.log(`[DEBUG] sample_url: ${chosen.sample_url}`);

      const imageUrl = chosen.sample_url || chosen.file_url;
      if (!imageUrl) {
        return interaction.editReply('üö´ Kh√¥ng th·ªÉ l·∫•y ·∫£nh t·ª´ Yande.re.');
      }

      const embed = new EmbedBuilder()
        .setTitle('üì∑ ·∫¢nh NSFW Kamisato Ayaka')
        .setImage(imageUrl)
        .setURL(`https://discord.gg/jtCrdcvbeR`)
        .setDescription('L∆∞u √Ω: ·∫¢nh c√≥ th·ªÉ load ch·∫≠m do Internet')
        .setFooter({ text: `C√≥ th·ªÉ ·∫£nh kh√¥ng ph·∫£i NSFW do l·ªçc qu√° nhi·ªÅu` });
       
      return interaction.editReply({ embeds: [embed] });

    } catch (err) {
      console.error('[L·ªñI API]:', err.message);
      return interaction.editReply('üö´ C√≥ l·ªói khi l·∫•y h√¨nh ·∫£nh, vui l√≤ng th·ª≠ l·∫°i sau.');
    }
  }
};
